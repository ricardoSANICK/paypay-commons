/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.paypay.baymax.commons.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import com.paypay.baymax.commons.type.OperEmployeeAllType;
import com.paypay.baymax.commons.type.OperEmployeeListAllType;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-09-13T17:05:15.456-05:00[America/Mexico_City]")
@Api(value = "employee", description = "the employee API")
public interface EmployeeApi {

    @ApiOperation(value = "Delete a record.", nickname = "disable", notes = "Delete (Logically) one or multiple records of a employee ", tags={ "Employee", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation") })
    @RequestMapping(value = "/employee/{id}",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> disable(@ApiParam(value = "Employee ID",required=true) @PathVariable("id") Long id);


    @ApiOperation(value = "Get all records.", nickname = "getAll", notes = "Get all the records of the employees ", response = OperEmployeeListAllType.class, tags={ "Employee", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = OperEmployeeListAllType.class) })
    @RequestMapping(value = "/employee",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<OperEmployeeListAllType> getAll();


    @ApiOperation(value = "Gets a employee by ID.", nickname = "getEmployeeById", notes = "Get all the employees by an ID as an object ", response = OperEmployeeAllType.class, tags={ "Employee", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = OperEmployeeAllType.class) })
    @RequestMapping(value = "/employee/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<OperEmployeeAllType> getEmployeeById(@ApiParam(value = "Employee ID",required=true) @PathVariable("id") Long id);


    @ApiOperation(value = "Insert a new Object.", nickname = "save", notes = "Insert one single record of a employee ", response = OperEmployeeAllType.class, tags={ "Employee", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = OperEmployeeAllType.class) })
    @RequestMapping(value = "/employee",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<OperEmployeeAllType> save(@ApiParam(value = "Insert a employee object." ,required=true )  @Valid @RequestBody OperEmployeeAllType body);


    @ApiOperation(value = "Update a record.", nickname = "update", notes = "Update one single record of a employee ", response = OperEmployeeAllType.class, tags={ "Employee", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = OperEmployeeAllType.class) })
    @RequestMapping(value = "/employee",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<OperEmployeeAllType> update(@ApiParam(value = "Update a employee object." ,required=true )  @Valid @RequestBody OperEmployeeAllType body);

}
